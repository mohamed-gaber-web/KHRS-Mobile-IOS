{"version":3,"sources":["./src/app/training/finished-test/finished-test.module.ts","./src/app/shared/services/test.service.ts","./src/app/training/finished-test/finished-test.page.scss","./src/app/training/finished-test/finished-test.page.html","./src/app/training/finished-test/finished-test.page.ts","./src/app/training/finished-test/finished-test-routing.module.ts"],"names":[],"mappings":"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","file":"finished-test-finished-test-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FinishedTestPageRoutingModule } from './finished-test-routing.module';\nimport { FinishedTestPage } from './finished-test.page';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FinishedTestPageRoutingModule\n  ],\n  declarations: [FinishedTestPage]\n})\nexport class FinishedTestPageModule {}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport {\n  getTextType,\n  finishedTest,\n  getUserActiveTest,\n  sendAnswerTest,\n  getCertificate,\n  startTest}\nfrom './../../api.constants';\n\nimport { AnswerTestModel } from '../models/answerTestModel';\n\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TestService {\n  offset: number = 1;\n  authKey: any;\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Get Test\n   * courseId [ number ]\n   * offset [ number ]\n   *\n   */\n  getTestType(courseId: number, offset: number) {\n    const params = `?courseId=${courseId}&offset=${offset}`\n    return this.http.get(`${getTextType}` + params );\n  }\n\n    /**\n   * Get check user test\n   * return isActive [ boolean ]\n   * return testApi [  ]\n   *\n   */\n  checkUserTest() {\n      return this.http.get(`${getUserActiveTest}`);\n  }\n\n\n    /**\n   * send answer question\n   *\n   */\n  sendAnswerTesting(answerObj: AnswerTestModel) {\n    return this.http.post(`${sendAnswerTest}` , answerObj);\n  }\n\n    /**\n   * send answer question\n   *\n   */\n    finishedTest(userTestId: number) {\n      const params = `?userTestId=${userTestId}`;\n      return this.http.post(`${finishedTest}` + params, {});\n    }\n\n    /**\n   * send answer question\n   *\n   */\n    startTest(courseId: number) {\n    const params = `?courseId=${courseId}`;\n    return this.http.post(`${startTest}` + params , {});\n  }\n\n    /**\n     * Get Certificate\n     * courseId [ number ]\n     *\n   */\n    getCertificate(courseId: number) {\n\n      this.authKey = localStorage.getItem('access_token');\n      const httpOptions = {\n        responseType: 'blob' as 'json',\n        headers: new HttpHeaders({\n          'Authorization': this.authKey,\n        })\n      };\n      const params = `?courseId=${courseId}`;\n      return this.http.get(`${getCertificate}` + params, httpOptions);\n    }\n\n}\n","export default \"ion-card {\\n  padding: 50px 0;\\n  background-color: #fff;\\n  text-align: center;\\n}\\nion-card ion-button {\\n  color: #fff !important;\\n}\\nion-card ion-card-content {\\n  font-size: 22px;\\n  font-weight: 600;\\n  color: var(--ion-color-second-app);\\n  text-align: center;\\n}\\nion-card img {\\n  max-width: 150px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2ZpbmlzaGVkLXRlc3QucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7QUFDRjtBQUNFO0VBQ0Usc0JBQUE7QUFDSjtBQUVFO0VBQ0UsZUFBQTtFQUNBLGdCQUFBO0VBQ0Esa0NBQUE7RUFDQSxrQkFBQTtBQUFKO0FBR0U7RUFDRSxnQkFBQTtBQURKIiwiZmlsZSI6ImZpbmlzaGVkLXRlc3QucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNhcmQge1xuICBwYWRkaW5nOiA1MHB4IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICBpb24tYnV0dG9uIHtcbiAgICBjb2xvcjogI2ZmZiFpbXBvcnRhbnQ7XG4gIH1cblxuICBpb24tY2FyZC1jb250ZW50IHtcbiAgICBmb250LXNpemU6IDIycHg7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXNlY29uZC1hcHApO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuXG4gIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxNTBweDtcbiAgfVxufVxuIl19 */\";","export default \"<ion-content>\\n\\n  <ion-card>\\n    <img src=\\\"../../../assets/images/finish-line-black.png\\\" alt=\\\"\\\">\\n    <ion-card-content>\\n      Thank you to finished This Test please click to finished or previous\\n    </ion-card-content>\\n\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size=\\\"6\\\"> <ion-button (click)=\\\"prev()\\\" fill=\\\"outline\\\">Previous</ion-button></ion-col>\\n        <ion-col size=\\\"6\\\"><ion-button (click)=\\\"finishedTest()\\\" fill=\\\"outline\\\">Finished</ion-button></ion-col>\\n\\n\\n      </ion-row>\\n    </ion-grid>\\n\\n  </ion-card>\\n\\n</ion-content>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TestService } from 'src/app/shared/services/test.service';\n\n@Component({\n  selector: 'app-finished-test',\n  templateUrl: './finished-test.page.html',\n  styleUrls: ['./finished-test.page.scss'],\n})\nexport class FinishedTestPage implements OnInit {\n\n  userTestId: any;\n  courseId: any;\n  pageNumber: any;\n\n  constructor(private testService: TestService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.userTestId = this.route.snapshot.paramMap.get('userTestId');\n    this.courseId = this.route.snapshot.paramMap.get('courseId');\n    this.pageNumber = this.route.snapshot.paramMap.get('offset');\n\n  }\n\n  finishedTest() {\n    this.testService.finishedTest(this.userTestId)\n    .subscribe(response => {\n      localStorage.setItem('testId', this.userTestId);\n      this.router.navigate(['/courses/tabs/my-courses']);\n      console.log(response);\n    })\n  }\n\n  prev() {\n    this.testService.getTestType(this.courseId, this.pageNumber-1)\n    .subscribe(response => {\n      if(response) {\n        this.router.navigate(['/exercise/test-course', {courseId: this.courseId}]);\n      }\n    })\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FinishedTestPage } from './finished-test.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FinishedTestPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FinishedTestPageRoutingModule {}\n"],"sourceRoot":"webpack:///"}