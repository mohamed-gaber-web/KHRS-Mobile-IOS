{"version":3,"sources":["./src/app/auth/change-password/change-password.page.html","./src/app/auth/change-password/change-password-routing.module.ts","./src/app/auth/change-password/change-password.page.ts","./src/app/auth/change-password/change-password.page.scss","./src/app/auth/change-password/change-password.module.ts"],"names":[],"mappings":"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","file":"change-password-change-password-module.js","sourcesContent":["export default \"  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/courses/tabs/all-courses\\\"> </ion-back-button>\\n    </ion-buttons>\\n\\n    <ion-menu-button slot=\\\"start\\\"></ion-menu-button>\\n\\n    <div class=\\\"img-profile\\\" slot=\\\"end\\\" routerLink=\\\"user-profile\\\">\\n      <ion-avatar slot=\\\"end\\\">\\n        <img loading=\\\"lazy\\\" *ngIf=\\\"userInfo.imagePath\\\" [src]=\\\"userInfo.imagePath\\\">\\n        <img loading=\\\"lazy\\\" *ngIf=\\\"userInfo === '' || userInfo.imagePath === null || userInfo.imagePath === undefined\\\"\\n        src=\\\"../../../assets/images/image profille (1).png\\\">\\n      </ion-avatar>\\n    </div>\\n  </ion-toolbar>\\n\\n<ion-content>\\n  <div class=\\\"top-title\\\">\\n    <h3> Change Password</h3>\\n  </div>\\n  <form [formGroup]=\\\"passwordForm\\\" (ngSubmit)=\\\"updatedPassword()\\\">\\n    <ion-grid>\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n        <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" size-md=\\\"8\\\">\\n          <ion-item lines=\\\"full\\\">\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Current Password</ion-label>\\n            <ion-input formControlName='currentPassword' type=\\\"password\\\" minlength=\\\"6\\\" required></ion-input>\\n          </ion-item>\\n\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"passwordFormErrors.currentPassword\\\">\\n            {{ passwordFormErrors.currentPassword }}\\n          </ion-text>\\n\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <ion-grid>\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n        <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" size-md=\\\"8\\\">\\n          <ion-item lines=\\\"none\\\">\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">New Password</ion-label>\\n            <ion-input formControlName='newPassword' type=\\\"password\\\" required></ion-input>\\n          </ion-item>\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"passwordFormErrors.newPassword\\\">\\n            {{ passwordFormErrors.newPassword }}\\n          </ion-text>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <ion-grid>\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n        <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" size-md=\\\"8\\\">\\n          <ion-item lines=\\\"none\\\">\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Confirm Password</ion-label>\\n            <ion-input formControlName='confirmPassword' type=\\\"password\\\" required></ion-input>\\n          </ion-item>\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"passwordFormErrors.confirmPassword\\\">\\n            {{ passwordFormErrors.confirmPassword }}\\n          </ion-text>\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"passwordForm.controls.confirmPassword.hasError('mismatchedPasswords')\\\">{{ 'notMatch' | translate }}</ion-text>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n\\n\\n\\n    <ion-grid>\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n        <ion-col size=\\\"12\\\" size-lg=\\\"6\\\" size-md=\\\"8\\\">\\n          <ion-button (click)=\\\"updatedPassword()\\\">\\n            <ion-icon name=\\\"checkmark-outline\\\"></ion-icon>\\n            Save\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChangePasswordPage } from './change-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChangePasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChangePasswordPageRoutingModule {}\n","import { matchingPasswords } from 'src/theme/app-validators';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { StorageService } from 'src/app/shared/services/storage.service';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.page.html',\n  styleUrls: ['./change-password.page.scss'],\n})\nexport class ChangePasswordPage implements OnInit {\n\n    userInfo: any;\n  passwordForm: FormGroup;\n  subs: Subscription[] = [];\n\n  passwordFormErrors = {\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: '',\n  };\n\n  passwordValidationMessages = {\n    currentPassword: {\n      required: 'Current password required',\n    },\n    newPassword: {\n      required: 'New password required',\n    },\n    confirmPassword: {\n      required: 'Confirm password',\n    },\n  };\n\n  constructor(\n    private authService: AuthService,\n    public formBuilder: FormBuilder,\n    public toastController: ToastController,\n    public storageService: StorageService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.userInfo = this.authService.getUser();\n\n    this.passwordForm = this.formBuilder.group({\n      'currentPassword': ['', Validators.required],\n      'newPassword': ['', Validators.required],\n      'confirmPassword': ['', Validators.required]\n    },{validator: matchingPasswords('newPassword', 'confirmPassword')});\n\n    this.passwordForm.valueChanges.subscribe((data) => this.validateChangePasswordForm());\n  }\n\n  validateChangePasswordForm(isSubmitting = false) {\n    for (const field of Object.keys(this.passwordFormErrors)) {\n      this.passwordFormErrors[field] = '';\n\n      const input = this.passwordForm.get(field) as FormControl;\n      if (input.invalid && (input.dirty || isSubmitting)) {\n        for (const error of Object.keys(input.errors)) {\n          this.passwordFormErrors[field] = this.passwordValidationMessages[field][\n            error\n          ];\n        }\n      }\n    }\n  }\n\n\n  updatedPassword() {\n    if (this.passwordForm.invalid) {\n      return;\n    }\n\n    this.subs.push(\n\n      this.authService.updatedPassword(this.passwordForm.value).subscribe(async (response) => {\n\n        if (response['success'] === true) {\n        var toast = await this.toastController.create({\n          message: 'Password updated',\n          duration: 2000,\n          color: 'success',\n        });\n        toast.present();\n        this.storageService.clearStorage();\n        this.router.navigate(['/auth/sign-in']);\n      } else {\n        var toast = await this.toastController.create({\n          message: response['arrayMessage'][0],\n          duration: 2000,\n          color: 'danger',\n        });\n        toast.present();\n        this.router.navigate(['/auth/user-profile']);\n\n      }\n\n    })\n    );\n\n  }\n\n  goToEditUser() {\n    this.router.navigate(['/auth/user-profile/edit-user']);\n  }\n\n  ngOnDestroy() {\n      this.subs.forEach((sub) => sub.unsubscribe());\n  }\n\n}\n","export default \".img-profile {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.img-profile ion-avatar {\\n  width: 50px;\\n  margin: 5px 15px;\\n  height: 50px;\\n  border: 2px solid #fff;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NoYW5nZS1wYXNzd29yZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtBQUNGO0FBQ0U7RUFDRSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxZQUFBO0VBQ0Esc0JBQUE7QUFDSiIsImZpbGUiOiJjaGFuZ2UtcGFzc3dvcmQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmltZy1wcm9maWxlIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgaW9uLWF2YXRhciB7XG4gICAgd2lkdGg6IDUwcHg7XG4gICAgbWFyZ2luOiA1cHggMTVweDtcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgYm9yZGVyOiAycHggc29saWQgI2ZmZjtcbiAgfVxufVxuIl19 */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChangePasswordPageRoutingModule } from './change-password-routing.module';\n\nimport { ChangePasswordPage } from './change-password.page';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChangePasswordPageRoutingModule,\n    TranslateModule,\n    ReactiveFormsModule\n  ],\n  declarations: [ChangePasswordPage]\n})\nexport class ChangePasswordPageModule {}\n"],"sourceRoot":"webpack:///"}